
// import Calculator from './components/calculator/Calculator'
// import Result from './components/calculator/Result'
// import Keypad from './components/calculator/Keypad'

// import AddNote from './components/notes/AddNote'
// import Note from './components/notes/Note'
// import NoteHead from './components/notes/NoteHead'
// import Notes from './components/notes/Notes'

// import Info from './components/Info'

const [result, setResult] = useState("");
  
  // const onClick = (button) => {
    
  //   if (button === "="){
  //     calculate()
  //   }

  //   else if (button === "CE"){
  //     correct() 
  //   }

  //   else if (button === "C"){
  //     clear()
  //   }   

  //   else {
  //     setResult(result + button)
  //   }

  // }

  // const clear = () => {
  //   setResult("")
  // }

  // const correct = () => {
  //   setResult(result.slice(0,-1))
  // }
  
  // const calculate = () => {
  //   var compute = ''

  //   compute = result

  //   try {
  //     // eslint-disable-next-line
  //     setResult(eval(compute) || "")
  //   } catch (e) {
  //     setResult("error")
  //   }

  // }


  // //notes app state and functions

  // const [showForm, setShowForm] = useState(true)
  // const [notes, setNotes] = useState([
  //   {
  //       id: 1,
  //       text: 'Sample note',
  //       body: 'Sample note body',
  //   }
  // ])

  // const addNote = (note) => {
  //   const id = Math.floor(Math.random() * 10000) + 1
  //   const newNote = {id, ...note }
  //   setNotes([...notes, newNote])
  // }


  // const deleteNote = (id) => {
  //   setNotes(notes.filter((note) => note.id !== id))
  // }

  // return (
  //   <div className="App">
  //     <h1>Welcome, <span className="welcome">user</span>!</h1>
  //     <br></br>
  //     <div className="widgets">
  //       <div className="widgetCol">
  //         <NoteHead onAdd={() => setShowForm(!showForm)}/>
  //         <br></br>
  //         {notes.length > 0 ? <Notes notes={notes} onDelete={deleteNote}/> : <p>Add a note! <br></br></p> }
  //         <hr></hr>
  //         <br></br>
  //          <AddNote onAdd={addNote}/>
  //       </div>
  //       <br></br>
  //       <div className="widgetCol">
  //         <Calculator /><br></br>
  //         <Result result={result} />
  //         <Keypad onClick={onClick}/>
  //       </div>
  //       <br></br>
  //       <div className="widgetCol">
  //         <Info />
  //       </div><br></br>
  //     </div>
  //   </div>
  // );





  
.welcome {
  color:rgb(1, 255, 192);
  margin: auto;
  text-align: center;
}

h1 {
  text-align: center;
}

.widgets {
  display: flex;
  flex-direction: column;
  justify-content: space-around
}

.widgetCol {
  margin: auto;
  width: 60%;
  padding: 50px;
  border: 1px solid black;
  border-radius: 5px;
  justify-content: center;
  text-align: center;
}

/* Note tracker CSS  */

.notesHead {
  display: flex;
  flex-direction: row;
  justify-content: space-between;
}

.notesHead h2{
  text-align: center;
  width: 150px;
  margin: auto;
}

.notesBtn {
  display: inline-block;
  background: rgb(1, 255, 192);
  color: black;
  border: 1px solid black;
  padding: 10px 20px;
  margin: -5px;
  border-radius: 5px;
  cursor: pointer;
  text-decoration: none;
  font-size: 15px;
  font-family: inherit;
}

.notesText {
  margin-top: 20px;
  text-align: left;
}

.note {
  text-align: left;
  background-color: rgba(216, 216, 216, 0.678);
  padding: 10px;
  line-height: 25px;
}

.note h3 {
  display: flex;
  flex-direction: row;
  justify-content: space-between;
}

.formBtn {
  background-color: black;
  color: white;
  padding: 10px 20px;
  border: none;
  border-radius: 5px;
}

/*  Calculator CSS */

.result {
  height: 40px;
  font-size: 30px;
  background-color: rgb(146, 146, 146);
  width: 20%;
  margin: auto;
  border: 1px solid black;
}

.button {
  width:20%;
  margin: auto;
  display: block;
}

button {
  width: 25%;
  height: 60px;
  font-size: 30px;
  background-color: orange;
  color: black;
}

